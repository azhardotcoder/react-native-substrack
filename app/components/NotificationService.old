import React from 'react';
import * as Notifications from 'expo-notifications';

// Basic notification settings
Notifications.setNotificationHandler({
  handleNotification: async () => ({
    shouldShowAlert: true,
    shouldPlaySound: true,
    shouldSetBadge: false,
  }),
});

// Create a service object
const NotificationService = {
  checkPermissions: async () => {
    try {
      const { status } = await Notifications.getPermissionsAsync();
      if (status !== 'granted') {
        const { status } = await Notifications.requestPermissionsAsync();
        if (status !== 'granted') {
          return false;
        }
      }
      return true;
    } catch (error) {
      console.log('Permission check error:', error);
      return false;
    }
  },

  showNotification: async (title: string, body: string) => {
    try {
      const hasPermission = await NotificationService.checkPermissions();
      if (!hasPermission) {
        return false;
      }

      await Notifications.scheduleNotificationAsync({
        content: {
          title,
          body,
          sound: true,
        },
        trigger: null, // immediate notification
      });
      return true;
    } catch (error) {
      console.log('Show notification error:', error);
      return false;
    }
  },

  scheduleNotification: async (title: string, body: string, date: Date) => {
    try {
      const hasPermission = await NotificationService.checkPermissions();
      if (!hasPermission) {
        return false;
      }

      await Notifications.scheduleNotificationAsync({
        content: {
          title,
          body,
          sound: true,
        },
        trigger: date,
      });
      return true;
    } catch (error) {
      console.log('Schedule notification error:', error);
      return false;
    }
  }
};

export default NotificationService; 